---
import DashboardLayout from '@/layouts/DashboardLayout.astro';
---

<DashboardLayout>
  <!-- Scheduling & Calendar Dashboard -->
  <div class="space-y-6">
    <!-- Header -->
    <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-4">
      <div>
        <h1 class="text-3xl font-bold text-primary-blue">Calendar & Scheduling</h1>
        <p class="text-muted-foreground">Manage appointments, client bookings, and your availability</p>
      </div>
      <div class="flex flex-wrap gap-3">
        <button class="btn-primary" onclick="openNewAppointmentModal()">
          <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
          </svg>
          New Appointment
        </button>
        <button class="btn-secondary" onclick="setAvailability()">
          <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
          Set Availability
        </button>
        <div class="flex items-center gap-2">
          <button class="btn-outline" onclick="changeView('month')" id="monthViewBtn">Month</button>
          <button class="btn-outline" onclick="changeView('week')" id="weekViewBtn">Week</button>
          <button class="btn-outline" onclick="changeView('day')" id="dayViewBtn">Day</button>
        </div>
      </div>
    </div>

    <!-- Calendar Navigation -->
    <div class="flex items-center justify-between bg-white rounded-lg border p-4">
      <div class="flex items-center gap-4">
        <button onclick="navigateCalendar('prev')" class="p-2 hover:bg-gray-100 rounded-lg">
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
          </svg>
        </button>
        <h2 id="calendarTitle" class="text-xl font-semibold text-gray-900">January 2024</h2>
        <button onclick="navigateCalendar('next')" class="p-2 hover:bg-gray-100 rounded-lg">
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        </button>
        <button onclick="goToToday()" class="btn-outline text-sm">Today</button>
      </div>
      
      <div class="flex items-center gap-4">
        <div class="flex items-center gap-2">
          <div class="w-3 h-3 bg-blue-500 rounded"></div>
          <span class="text-sm">Confirmed</span>
        </div>
        <div class="flex items-center gap-2">
          <div class="w-3 h-3 bg-yellow-500 rounded"></div>
          <span class="text-sm">Pending</span>
        </div>
        <div class="flex items-center gap-2">
          <div class="w-3 h-3 bg-gray-400 rounded"></div>
          <span class="text-sm">Blocked</span>
        </div>
      </div>
    </div>

    <!-- Main Calendar Grid -->
    <div class="grid grid-cols-1 lg:grid-cols-4 gap-6">
      <!-- Calendar View -->
      <div class="lg:col-span-3">
        <div class="bg-white rounded-lg border">
          <!-- Month View -->
          <div id="monthView" class="calendar-view">
            <div class="grid grid-cols-7 border-b">
              <div class="p-3 text-center text-sm font-medium text-gray-600 border-r">Sun</div>
              <div class="p-3 text-center text-sm font-medium text-gray-600 border-r">Mon</div>
              <div class="p-3 text-center text-sm font-medium text-gray-600 border-r">Tue</div>
              <div class="p-3 text-center text-sm font-medium text-gray-600 border-r">Wed</div>
              <div class="p-3 text-center text-sm font-medium text-gray-600 border-r">Thu</div>
              <div class="p-3 text-center text-sm font-medium text-gray-600 border-r">Fri</div>
              <div class="p-3 text-center text-sm font-medium text-gray-600">Sat</div>
            </div>
            <div id="calendarGrid" class="grid grid-cols-7 min-h-96">
              <!-- Calendar days will be generated by JavaScript -->
            </div>
          </div>

          <!-- Week View -->
          <div id="weekView" class="calendar-view hidden">
            <div class="grid grid-cols-8 border-b">
              <div class="p-3 text-center text-sm font-medium text-gray-600 border-r">Time</div>
              <div class="p-3 text-center text-sm font-medium text-gray-600 border-r">Sun</div>
              <div class="p-3 text-center text-sm font-medium text-gray-600 border-r">Mon</div>
              <div class="p-3 text-center text-sm font-medium text-gray-600 border-r">Tue</div>
              <div class="p-3 text-center text-sm font-medium text-gray-600 border-r">Wed</div>
              <div class="p-3 text-center text-sm font-medium text-gray-600 border-r">Thu</div>
              <div class="p-3 text-center text-sm font-medium text-gray-600 border-r">Fri</div>
              <div class="p-3 text-center text-sm font-medium text-gray-600">Sat</div>
            </div>
            <div id="weekGrid" class="grid grid-cols-8">
              <!-- Week view will be generated by JavaScript -->
            </div>
          </div>

          <!-- Day View -->
          <div id="dayView" class="calendar-view hidden">
            <div class="p-4 border-b">
              <h3 id="dayViewTitle" class="text-lg font-semibold">Today - January 15, 2024</h3>
            </div>
            <div id="dayGrid" class="p-4">
              <!-- Day view will be generated by JavaScript -->
            </div>
          </div>
        </div>
      </div>

      <!-- Right Sidebar -->
      <div class="space-y-6">
        <!-- Today's Appointments -->
        <div class="card">
          <div class="card-header">
            <h3 class="card-title">Today's Schedule</h3>
          </div>
          <div class="card-content">
            <div class="space-y-3">
              <div class="flex items-center gap-3 p-3 border rounded-lg">
                <div class="w-3 h-3 bg-blue-500 rounded-full"></div>
                <div class="flex-1">
                  <p class="font-medium">Wedding Consultation</p>
                  <p class="text-sm text-muted-foreground">Sarah & Mike Johnson</p>
                  <p class="text-sm text-muted-foreground">10:00 AM - 11:30 AM</p>
                </div>
              </div>
              <div class="flex items-center gap-3 p-3 border rounded-lg">
                <div class="w-3 h-3 bg-yellow-500 rounded-full"></div>
                <div class="flex-1">
                  <p class="font-medium">Portrait Session</p>
                  <p class="text-sm text-muted-foreground">Emily Davis</p>
                  <p class="text-sm text-muted-foreground">2:00 PM - 4:00 PM</p>
                </div>
              </div>
              <div class="flex items-center gap-3 p-3 border rounded-lg">
                <div class="w-3 h-3 bg-blue-500 rounded-full"></div>
                <div class="flex-1">
                  <p class="font-medium">Corporate Event</p>
                  <p class="text-sm text-muted-foreground">TechCorp Inc.</p>
                  <p class="text-sm text-muted-foreground">6:00 PM - 10:00 PM</p>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Quick Actions -->
        <div class="card">
          <div class="card-header">
            <h3 class="card-title">Quick Actions</h3>
          </div>
          <div class="card-content space-y-3">
            <button class="w-full btn-outline text-left flex items-center gap-3" onclick="quickBooking()">
              <svg class="w-5 h-5 text-primary-blue" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
              </svg>
              Quick Booking
            </button>
            <button class="w-full btn-outline text-left flex items-center gap-3" onclick="blockTime()">
              <svg class="w-5 h-5 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728L5.636 5.636m12.728 12.728L18.364 5.636M5.636 18.364l12.728-12.728"></path>
              </svg>
              Block Time Slot
            </button>
            <button class="w-full btn-outline text-left flex items-center gap-3" onclick="viewRequests()">
              <svg class="w-5 h-5 text-orange-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
              Pending Requests
            </button>
            <button class="w-full btn-outline text-left flex items-center gap-3" onclick="syncCalendar()">
              <svg class="w-5 h-5 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
              </svg>
              Sync Google Calendar
            </button>
          </div>
        </div>

        <!-- Upcoming Deadlines -->
        <div class="card">
          <div class="card-header">
            <h3 class="card-title">Upcoming Deadlines</h3>
          </div>
          <div class="card-content">
            <div class="space-y-3">
              <div class="flex items-center gap-3 p-3 border rounded-lg">
                <div class="w-8 h-8 bg-red-100 rounded-full flex items-center justify-center">
                  <span class="text-xs font-medium text-red-600">15</span>
                </div>
                <div class="flex-1">
                  <p class="font-medium text-sm">Wedding Photos Delivery</p>
                  <p class="text-xs text-muted-foreground">Johnson Wedding</p>
                </div>
              </div>
              <div class="flex items-center gap-3 p-3 border rounded-lg">
                <div class="w-8 h-8 bg-orange-100 rounded-full flex items-center justify-center">
                  <span class="text-xs font-medium text-orange-600">18</span>
                </div>
                <div class="flex-1">
                  <p class="font-medium text-sm">Final Edit Review</p>
                  <p class="text-xs text-muted-foreground">Corporate Video</p>
                </div>
              </div>
              <div class="flex items-center gap-3 p-3 border rounded-lg">
                <div class="w-8 h-8 bg-yellow-100 rounded-full flex items-center justify-center">
                  <span class="text-xs font-medium text-yellow-600">22</span>
                </div>
                <div class="flex-1">
                  <p class="font-medium text-sm">Contract Renewal</p>
                  <p class="text-xs text-muted-foreground">Monthly Retainer Client</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- New Appointment Modal -->
  <div id="appointmentModal" class="modal-overlay hidden">
    <div class="modal-content">
      <div class="modal-header">
        <h3 class="modal-title">New Appointment</h3>
        <button class="modal-close" onclick="closeModal('appointmentModal')">&times;</button>
      </div>
      <div class="modal-body">
        <form id="appointmentForm" class="space-y-4">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label class="block text-sm font-medium mb-2">Client</label>
              <select class="input-field w-full" required>
                <option value="">Select Client</option>
                <option value="client1">Sarah & Mike Johnson</option>
                <option value="client2">Emily Davis</option>
                <option value="client3">TechCorp Inc.</option>
                <option value="new">+ Add New Client</option>
              </select>
            </div>
            <div>
              <label class="block text-sm font-medium mb-2">Service Type</label>
              <select class="input-field w-full" required>
                <option value="">Select Service</option>
                <option value="wedding">Wedding Photography</option>
                <option value="portrait">Portrait Session</option>
                <option value="corporate">Corporate Event</option>
                <option value="consultation">Consultation</option>
                <option value="editing">Editing Session</option>
              </select>
            </div>
          </div>
          
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label class="block text-sm font-medium mb-2">Date</label>
              <input type="date" class="input-field w-full" required>
            </div>
            <div>
              <label class="block text-sm font-medium mb-2">Duration</label>
              <select class="input-field w-full" required>
                <option value="30">30 minutes</option>
                <option value="60">1 hour</option>
                <option value="90" selected>1.5 hours</option>
                <option value="120">2 hours</option>
                <option value="240">4 hours</option>
                <option value="480">8 hours</option>
                <option value="custom">Custom</option>
              </select>
            </div>
          </div>

          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label class="block text-sm font-medium mb-2">Start Time</label>
              <input type="time" class="input-field w-full" required>
            </div>
            <div>
              <label class="block text-sm font-medium mb-2">Location</label>
              <input type="text" class="input-field w-full" placeholder="Studio / Client Location / Address">
            </div>
          </div>

          <div>
            <label class="block text-sm font-medium mb-2">Notes</label>
            <textarea class="input-field w-full" rows="3" placeholder="Special requirements, equipment needed, etc."></textarea>
          </div>

          <div class="flex items-center gap-3">
            <input type="checkbox" id="sendConfirmation" class="rounded">
            <label for="sendConfirmation" class="text-sm">Send confirmation email to client</label>
          </div>

          <div class="flex items-center gap-3">
            <input type="checkbox" id="setReminder" class="rounded" checked>
            <label for="setReminder" class="text-sm">Set reminder (24 hours before)</label>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn-secondary" onclick="closeModal('appointmentModal')">Cancel</button>
        <button type="submit" form="appointmentForm" class="btn-primary">Create Appointment</button>
      </div>
    </div>
  </div>

  <!-- Availability Settings Modal -->
  <div id="availabilityModal" class="modal-overlay hidden">
    <div class="modal-content">
      <div class="modal-header">
        <h3 class="modal-title">Set Availability</h3>
        <button class="modal-close" onclick="closeModal('availabilityModal')">&times;</button>
      </div>
      <div class="modal-body">
        <form id="availabilityForm" class="space-y-4">
          <div class="space-y-4">
            <h4 class="font-medium">Working Hours</h4>
            <div class="space-y-3">
              <div class="flex items-center justify-between p-3 border rounded-lg">
                <div class="flex items-center gap-3">
                  <input type="checkbox" checked class="rounded">
                  <span class="font-medium">Monday</span>
                </div>
                <div class="flex items-center gap-2">
                  <input type="time" value="09:00" class="input-field">
                  <span>to</span>
                  <input type="time" value="17:00" class="input-field">
                </div>
              </div>
              <div class="flex items-center justify-between p-3 border rounded-lg">
                <div class="flex items-center gap-3">
                  <input type="checkbox" checked class="rounded">
                  <span class="font-medium">Tuesday</span>
                </div>
                <div class="flex items-center gap-2">
                  <input type="time" value="09:00" class="input-field">
                  <span>to</span>
                  <input type="time" value="17:00" class="input-field">
                </div>
              </div>
              <div class="flex items-center justify-between p-3 border rounded-lg">
                <div class="flex items-center gap-3">
                  <input type="checkbox" checked class="rounded">
                  <span class="font-medium">Wednesday</span>
                </div>
                <div class="flex items-center gap-2">
                  <input type="time" value="09:00" class="input-field">
                  <span>to</span>
                  <input type="time" value="17:00" class="input-field">
                </div>
              </div>
              <div class="flex items-center justify-between p-3 border rounded-lg">
                <div class="flex items-center gap-3">
                  <input type="checkbox" checked class="rounded">
                  <span class="font-medium">Thursday</span>
                </div>
                <div class="flex items-center gap-2">
                  <input type="time" value="09:00" class="input-field">
                  <span>to</span>
                  <input type="time" value="17:00" class="input-field">
                </div>
              </div>
              <div class="flex items-center justify-between p-3 border rounded-lg">
                <div class="flex items-center gap-3">
                  <input type="checkbox" checked class="rounded">
                  <span class="font-medium">Friday</span>
                </div>
                <div class="flex items-center gap-2">
                  <input type="time" value="09:00" class="input-field">
                  <span>to</span>
                  <input type="time" value="17:00" class="input-field">
                </div>
              </div>
              <div class="flex items-center justify-between p-3 border rounded-lg">
                <div class="flex items-center gap-3">
                  <input type="checkbox" class="rounded">
                  <span class="font-medium">Saturday</span>
                </div>
                <div class="flex items-center gap-2">
                  <input type="time" value="10:00" class="input-field">
                  <span>to</span>
                  <input type="time" value="16:00" class="input-field">
                </div>
              </div>
              <div class="flex items-center justify-between p-3 border rounded-lg">
                <div class="flex items-center gap-3">
                  <input type="checkbox" class="rounded">
                  <span class="font-medium">Sunday</span>
                </div>
                <div class="flex items-center gap-2">
                  <input type="time" value="12:00" class="input-field">
                  <span>to</span>
                  <input type="time" value="16:00" class="input-field">
                </div>
              </div>
            </div>
          </div>

          <div class="space-y-4">
            <h4 class="font-medium">Break Times</h4>
            <div class="grid grid-cols-2 gap-4">
              <div>
                <label class="block text-sm font-medium mb-2">Lunch Break Start</label>
                <input type="time" value="12:00" class="input-field w-full">
              </div>
              <div>
                <label class="block text-sm font-medium mb-2">Lunch Break End</label>
                <input type="time" value="13:00" class="input-field w-full">
              </div>
            </div>
          </div>

          <div class="space-y-4">
            <h4 class="font-medium">Buffer Time</h4>
            <div>
              <label class="block text-sm font-medium mb-2">Time between appointments</label>
              <select class="input-field w-full">
                <option value="0">No buffer</option>
                <option value="15" selected>15 minutes</option>
                <option value="30">30 minutes</option>
                <option value="60">1 hour</option>
              </select>
            </div>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn-secondary" onclick="closeModal('availabilityModal')">Cancel</button>
        <button type="submit" form="availabilityForm" class="btn-primary">Save Availability</button>
      </div>
    </div>
  </div>
</DashboardLayout> 

<script>
  // Calendar and Scheduling JavaScript
  let currentDate = new Date();
  let currentView = 'month';
  
  // Sample appointments data
  const appointments = [
    {
      id: 1,
      title: "Wedding Consultation",
      client: "Sarah & Mike Johnson",
      date: "2024-01-15",
      startTime: "10:00",
      endTime: "11:30",
      status: "confirmed",
      type: "consultation"
    },
    {
      id: 2,
      title: "Portrait Session",
      client: "Emily Davis",
      date: "2024-01-15",
      startTime: "14:00",
      endTime: "16:00",
      status: "pending",
      type: "portrait"
    },
    {
      id: 3,
      title: "Corporate Event",
      client: "TechCorp Inc.",
      date: "2024-01-15",
      startTime: "18:00",
      endTime: "22:00",
      status: "confirmed",
      type: "corporate"
    }
  ];

  function openNewAppointmentModal() {
    document.getElementById('appointmentModal').classList.remove('hidden');
  }

  function setAvailability() {
    document.getElementById('availabilityModal').classList.remove('hidden');
  }

  function changeView(view) {
    currentView = view;
    
    // Update button states
    document.querySelectorAll('.btn-outline').forEach(btn => {
      btn.classList.remove('bg-primary-blue', 'text-white');
    });
    document.getElementById(view + 'ViewBtn').classList.add('bg-primary-blue', 'text-white');
    
    // Show/hide views
    document.querySelectorAll('.calendar-view').forEach(view => view.classList.add('hidden'));
    document.getElementById(view + 'View').classList.remove('hidden');
    
    // Render the appropriate view
    if (view === 'month') {
      renderMonthView();
    } else if (view === 'week') {
      renderWeekView();
    } else if (view === 'day') {
      renderDayView();
    }
  }

  function navigateCalendar(direction) {
    if (currentView === 'month') {
      currentDate.setMonth(currentDate.getMonth() + (direction === 'next' ? 1 : -1));
    } else if (currentView === 'week') {
      currentDate.setDate(currentDate.getDate() + (direction === 'next' ? 7 : -7));
    } else if (currentView === 'day') {
      currentDate.setDate(currentDate.getDate() + (direction === 'next' ? 1 : -1));
    }
    
    updateCalendarTitle();
    renderCurrentView();
  }

  function goToToday() {
    currentDate = new Date();
    updateCalendarTitle();
    renderCurrentView();
  }

  function updateCalendarTitle() {
    const options = { year: 'numeric', month: 'long' };
    if (currentView === 'day') {
      const dayOptions = { year: 'numeric', month: 'long', day: 'numeric' };
      document.getElementById('calendarTitle').textContent = currentDate.toLocaleDateString('en-US', dayOptions);
    } else {
      document.getElementById('calendarTitle').textContent = currentDate.toLocaleDateString('en-US', options);
    }
  }

  function renderCurrentView() {
    if (currentView === 'month') {
      renderMonthView();
    } else if (currentView === 'week') {
      renderWeekView();
    } else if (currentView === 'day') {
      renderDayView();
    }
  }

  function renderMonthView() {
    const grid = document.getElementById('calendarGrid');
    grid.innerHTML = '';
    
    const firstDay = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);
    const lastDay = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0);
    const startDate = new Date(firstDay);
    startDate.setDate(startDate.getDate() - firstDay.getDay());
    
    for (let i = 0; i < 42; i++) {
      const cellDate = new Date(startDate);
      cellDate.setDate(startDate.getDate() + i);
      
      const dayCell = document.createElement('div');
      dayCell.className = 'calendar-day border-r border-b p-2 min-h-24 hover:bg-gray-50 cursor-pointer';
      
      const isCurrentMonth = cellDate.getMonth() === currentDate.getMonth();
      const isToday = cellDate.toDateString() === new Date().toDateString();
      
      dayCell.innerHTML = `
        <div class="text-sm ${isCurrentMonth ? 'text-gray-900' : 'text-gray-400'} ${isToday ? 'font-bold' : ''}">
          ${cellDate.getDate()}
        </div>
        <div class="space-y-1 mt-1">
          ${getAppointmentsForDate(cellDate).map(apt => `
            <div class="text-xs p-1 rounded ${getStatusColor(apt.status)} truncate">
              ${apt.title}
            </div>
          `).join('')}
        </div>
      `;
      
      dayCell.onclick = () => selectDate(cellDate);
      grid.appendChild(dayCell);
    }
  }

  function renderWeekView() {
    const grid = document.getElementById('weekGrid');
    grid.innerHTML = '';
    
    // Generate time slots and week days
    for (let hour = 6; hour <= 22; hour++) {
      for (let minute = 0; minute < 60; minute += 30) {
        const timeSlot = document.createElement('div');
        timeSlot.className = 'grid grid-cols-8 border-b';
        
        const timeLabel = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;
        timeSlot.innerHTML = `
          <div class="p-2 border-r text-xs text-gray-600">${minute === 0 ? timeLabel : ''}</div>
          <div class="p-2 border-r hover:bg-gray-50 cursor-pointer"></div>
          <div class="p-2 border-r hover:bg-gray-50 cursor-pointer"></div>
          <div class="p-2 border-r hover:bg-gray-50 cursor-pointer"></div>
          <div class="p-2 border-r hover:bg-gray-50 cursor-pointer"></div>
          <div class="p-2 border-r hover:bg-gray-50 cursor-pointer"></div>
          <div class="p-2 border-r hover:bg-gray-50 cursor-pointer"></div>
          <div class="p-2 hover:bg-gray-50 cursor-pointer"></div>
        `;
        
        grid.appendChild(timeSlot);
      }
    }
  }

  function renderDayView() {
    const grid = document.getElementById('dayGrid');
    grid.innerHTML = '';
    
    const dayAppointments = getAppointmentsForDate(currentDate);
    
    if (dayAppointments.length === 0) {
      grid.innerHTML = '<p class="text-gray-500 text-center py-8">No appointments scheduled for this day</p>';
      return;
    }
    
    dayAppointments.forEach(apt => {
      const aptElement = document.createElement('div');
      aptElement.className = `appointment-block p-4 border rounded-lg mb-4 ${getStatusColorBg(apt.status)}`;
      aptElement.innerHTML = `
        <div class="flex justify-between items-start">
          <div>
            <h4 class="font-semibold">${apt.title}</h4>
            <p class="text-sm text-gray-600">${apt.client}</p>
            <p class="text-sm text-gray-600">${apt.startTime} - ${apt.endTime}</p>
          </div>
          <div class="flex gap-2">
            <button class="text-blue-600 hover:underline text-sm">Edit</button>
            <button class="text-red-600 hover:underline text-sm">Cancel</button>
          </div>
        </div>
      `;
      grid.appendChild(aptElement);
    });
  }

  function getAppointmentsForDate(date) {
    const dateStr = date.toISOString().split('T')[0];
    return appointments.filter(apt => apt.date === dateStr);
  }

  function getStatusColor(status) {
    switch (status) {
      case 'confirmed': return 'bg-blue-100 text-blue-800';
      case 'pending': return 'bg-yellow-100 text-yellow-800';
      case 'blocked': return 'bg-gray-100 text-gray-800';
      default: return 'bg-gray-100 text-gray-800';
    }
  }

  function getStatusColorBg(status) {
    switch (status) {
      case 'confirmed': return 'border-blue-200 bg-blue-50';
      case 'pending': return 'border-yellow-200 bg-yellow-50';
      case 'blocked': return 'border-gray-200 bg-gray-50';
      default: return 'border-gray-200 bg-gray-50';
    }
  }

  function selectDate(date) {
    // Handle date selection for new appointment
    console.log('Selected date:', date);
  }

  function quickBooking() {
    openNewAppointmentModal();
  }

  function blockTime() {
    // Implementation for blocking time slots
    alert('Block time slot feature will be implemented');
  }

  function viewRequests() {
    // Implementation for viewing pending requests
    alert('Pending requests feature will be implemented');
  }

  function syncCalendar() {
    // Implementation for Google Calendar sync
    alert('Calendar sync feature will be implemented');
  }

  function closeModal(modalId) {
    document.getElementById(modalId).classList.add('hidden');
  }

  // Close modal when clicking outside
  document.addEventListener('click', function(event) {
    if (event.target.classList.contains('modal-overlay')) {
      event.target.classList.add('hidden');
    }
  });

  // Form submissions
  document.getElementById('appointmentForm').addEventListener('submit', function(e) {
    e.preventDefault();
    // Handle appointment creation
    alert('Appointment created successfully!');
    closeModal('appointmentModal');
  });

  document.getElementById('availabilityForm').addEventListener('submit', function(e) {
    e.preventDefault();
    // Handle availability settings
    alert('Availability settings saved!');
    closeModal('availabilityModal');
  });

  // Initialize calendar
  document.addEventListener('DOMContentLoaded', function() {
    updateCalendarTitle();
    renderMonthView();
    
    // Set default view button
    document.getElementById('monthViewBtn').classList.add('bg-primary-blue', 'text-white');
  });
</script>

<style>
  .calendar-day {
    min-height: 120px;
  }
  
  .appointment-block {
    border-left: 4px solid;
  }
  
  .appointment-block.border-blue-200 {
    border-left-color: #3b82f6;
  }
  
  .appointment-block.border-yellow-200 {
    border-left-color: #eab308;
  }
  
  .appointment-block.border-gray-200 {
    border-left-color: #6b7280;
  }

  /* Modal Styles */
  .modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.5);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
  }

  .modal-content {
    background: white;
    border-radius: 8px;
    width: 90%;
    max-width: 700px;
    max-height: 90vh;
    overflow-y: auto;
  }

  .modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1.5rem;
    border-bottom: 1px solid #e5e7eb;
  }

  .modal-title {
    font-size: 1.25rem;
    font-weight: 600;
    color: #1f2937;
  }

  .modal-close {
    font-size: 1.5rem;
    cursor: pointer;
    color: #6b7280;
    border: none;
    background: none;
  }

  .modal-body {
    padding: 1.5rem;
  }

  .modal-footer {
    display: flex;
    justify-content: flex-end;
    gap: 0.75rem;
    padding: 1.5rem;
    border-top: 1px solid #e5e7eb;
  }
</style>
</rewritten_file>