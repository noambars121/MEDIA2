---
import Layout from '@/layouts/Layout.astro';
---

<Layout title="Clients - MediaHand">
  <div class="min-h-screen bg-black">
    <!-- Minimal grid pattern background -->
    <div class="absolute inset-0 bg-[linear-gradient(rgba(255,255,255,0.005)_1px,transparent_1px),linear-gradient(90deg,rgba(255,255,255,0.005)_1px,transparent_1px)] bg-[size:40px_40px]"></div>

    <!-- Navigation -->
    <nav class="relative z-10 px-6 py-5 border-b border-white/5">
      <div class="max-w-7xl mx-auto flex justify-between items-center">
        <div class="flex items-center space-x-8">
          <div class="flex items-center space-x-3">
            <div class="w-8 h-8 bg-white rounded-md flex items-center justify-center">
              <svg class="w-5 h-5 text-black" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2.5" d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z" />
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2.5" d="M15 13a3 3 0 11-6 0 3 3 0 016 0z" />
              </svg>
            </div>
            <span class="text-lg font-medium text-white tracking-tight">MediaHand</span>
          </div>
          
          <div class="hidden md:flex space-x-8">
            <a href="/dashboard" class="nav-link">Dashboard</a>
            <a href="/clients" class="nav-link active">Clients</a>
            <a href="/projects" class="nav-link">Projects</a>
            <a href="/media" class="nav-link">Media</a>
            <a href="/ai-content" class="nav-link">Generate Content</a>
            <a href="/scheduling" class="nav-link">Scheduling</a>
            <a href="/analytics" class="nav-link">Analytics</a>
          </div>
        </div>
        
        <div class="flex items-center space-x-4">
          <button class="p-2 hover:bg-white/5 rounded-lg transition-colors">
            <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-5 5v-5z" />
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 17H4l5 5v-5z" />
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 3H3v8h18V3z" />
            </svg>
          </button>
          <button class="p-2 hover:bg-white/5 rounded-lg transition-colors">
            <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
            </svg>
          </button>
          <div class="w-10 h-10 bg-white/10 rounded-full flex items-center justify-center">
            <span class="text-white text-sm font-medium">JP</span>
          </div>
        </div>
      </div>
    </nav>

    <!-- Main Content -->
    <main class="relative z-10 max-w-7xl mx-auto px-6 py-10">
      <!-- Page Header -->
      <div class="flex flex-col md:flex-row md:items-center justify-between mb-12">
        <div>
          <h1 class="text-3xl font-semibold text-white mb-3 tracking-tight">Client Management</h1>
          <p class="text-gray-400 font-light">Manage relationships and track client interactions</p>
        </div>
        <button onclick="openAddClientModal()" class="btn-primary mt-6 md:mt-0 flex items-center space-x-2">
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
          </svg>
          <span>Add Client</span>
        </button>
      </div>

      <!-- Enhanced Key Metrics -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-6 mb-12">
        <div class="card p-6">
          <div class="flex items-center justify-between mb-4">
            <h3 class="text-xs font-medium text-gray-400 uppercase tracking-wider">Total Clients</h3>
            <svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />
            </svg>
          </div>
          <div class="text-3xl font-semibold text-white mb-1 tracking-tight" id="total-clients">156</div>
          <div class="text-xs text-gray-400 font-light">+12 this month</div>
        </div>

        <div class="card p-6">
          <div class="flex items-center justify-between mb-4">
            <h3 class="text-xs font-medium text-gray-400 uppercase tracking-wider">Active Clients</h3>
            <svg class="w-4 h-4 text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
          </div>
          <div class="text-3xl font-semibold text-white mb-1 tracking-tight" id="active-clients">142</div>
          <div class="text-xs text-gray-400 font-light">Currently active</div>
        </div>

        <div class="card p-6">
          <div class="flex items-center justify-between mb-4">
            <h3 class="text-xs font-medium text-gray-400 uppercase tracking-wider">VIP Clients</h3>
            <svg class="w-4 h-4 text-purple-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z" />
            </svg>
          </div>
          <div class="text-3xl font-semibold text-white mb-1 tracking-tight" id="vip-clients">23</div>
          <div class="text-xs text-gray-400 font-light">Premium tier</div>
        </div>

        <div class="card p-6">
          <div class="flex items-center justify-between mb-4">
            <h3 class="text-xs font-medium text-gray-400 uppercase tracking-wider">Total Projects</h3>
            <svg class="w-4 h-4 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
            </svg>
          </div>
          <div class="text-3xl font-semibold text-white mb-1 tracking-tight" id="total-projects">89</div>
          <div class="text-xs text-gray-400 font-light">All time</div>
        </div>

        <div class="card p-6">
          <div class="flex items-center justify-between mb-4">
            <h3 class="text-xs font-medium text-gray-400 uppercase tracking-wider">Lifetime Value</h3>
            <svg class="w-4 h-4 text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1" />
            </svg>
          </div>
          <div class="text-3xl font-semibold text-white mb-1 tracking-tight" id="lifetime-value">$298K</div>
          <div class="text-xs text-gray-400 font-light">Combined LTV</div>
        </div>
      </div>

      <!-- Enhanced Search and Filters -->
      <div class="card p-6 mb-10">
        <div class="flex flex-col gap-6">
          <!-- Top Row: Search and Quick Filters -->
          <div class="flex flex-col lg:flex-row gap-4">
            <div class="flex-1">
              <div class="relative">
                <svg class="absolute left-4 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                </svg>
                <input 
                  type="text" 
                  placeholder="Search clients by name, email, company, or phone..." 
                  class="input-primary pl-12"
                  id="search-input"
                />
              </div>
            </div>
            <div class="flex gap-3">
              <select class="input-primary min-w-[120px]" id="status-filter">
                <option value="">All Status</option>
                <option value="active">Active</option>
                <option value="vip">VIP</option>
                <option value="prospect">Prospect</option>
                <option value="inactive">Inactive</option>
                <option value="archived">Archived</option>
              </select>
              <select class="input-primary min-w-[120px]" id="priority-filter">
                <option value="">All Priority</option>
                <option value="5">High (5)</option>
                <option value="4">High (4)</option>
                <option value="3">Medium (3)</option>
                <option value="2">Low (2)</option>
                <option value="1">Low (1)</option>
              </select>
              <select class="input-primary min-w-[140px]" id="sort-filter">
                <option value="updated_at">Recently Updated</option>
                <option value="name">Name A-Z</option>
                <option value="lifetime_value">Lifetime Value</option>
                <option value="created_at">Date Added</option>
                <option value="project_count">Project Count</option>
              </select>
            </div>
          </div>

          <!-- Advanced Filters (Collapsible) -->
          <div class="border-t border-white/10 pt-4">
            <button 
              class="flex items-center space-x-2 text-sm text-gray-400 hover:text-white transition-colors mb-4"
              onclick="toggleAdvancedFilters()"
              id="advanced-filters-toggle"
            >
              <svg class="w-4 h-4 transform transition-transform" id="advanced-filters-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
              </svg>
              <span>Advanced Filters</span>
            </button>
            
            <div class="hidden grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4" id="advanced-filters">
              <div>
                <label class="block text-xs text-gray-400 mb-2">Industry</label>
                <select class="input-primary text-sm" id="industry-filter">
                  <option value="">All Industries</option>
                  <option value="wedding">Wedding</option>
                  <option value="corporate">Corporate</option>
                  <option value="real_estate">Real Estate</option>
                  <option value="fashion">Fashion</option>
                  <option value="food">Food & Beverage</option>
                  <option value="events">Events</option>
                  <option value="other">Other</option>
                </select>
              </div>
              
              <div>
                <label class="block text-xs text-gray-400 mb-2">Location</label>
                <input 
                  type="text" 
                  placeholder="City, State" 
                  class="input-primary text-sm"
                  id="location-filter"
                />
              </div>
              
              <div>
                <label class="block text-xs text-gray-400 mb-2">Referral Source</label>
                <select class="input-primary text-sm" id="referral-filter">
                  <option value="">All Sources</option>
                  <option value="website">Website</option>
                  <option value="social_media">Social Media</option>
                  <option value="word_of_mouth">Word of Mouth</option>
                  <option value="google">Google</option>
                  <option value="other">Other</option>
                </select>
              </div>
              
              <div>
                <label class="block text-xs text-gray-400 mb-2">Tags</label>
                <input 
                  type="text" 
                  placeholder="Enter tags..." 
                  class="input-primary text-sm"
                  id="tags-filter"
                />
              </div>
            </div>
          </div>

          <!-- Quick Actions & View Toggle -->
          <div class="flex items-center justify-between border-t border-white/10 pt-4">
            <div class="flex items-center space-x-4">
              <span class="text-sm text-gray-400">Showing <span class="text-white font-medium" id="results-count">6</span> clients</span>
              <button class="text-sm text-blue-400 hover:text-blue-300 transition-colors" onclick="clearAllFilters()">
                Clear Filters
              </button>
            </div>
            
            <div class="flex items-center space-x-3">
              <!-- View Toggle -->
              <div class="flex bg-white/5 rounded-lg p-1">
                <button id="grid-view" onclick="setView('grid')" class="p-2 rounded-md bg-white/10 text-white transition-all">
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z" />
                  </svg>
                </button>
                <button id="list-view" onclick="setView('list')" class="p-2 rounded-md text-gray-400 hover:text-white hover:bg-white/5 transition-all">
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 10h16M4 14h16M4 18h16" />
                  </svg>
                </button>
              </div>
              
              <!-- Export Button -->
              <button class="btn-secondary text-sm py-2 px-4 flex items-center space-x-2" onclick="exportClients()">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                </svg>
                <span>Export</span>
              </button>
            </div>
          </div>
        </div>
      </div>

      <!-- Clients Grid -->
      <div class="grid lg:grid-cols-2 xl:grid-cols-3 gap-8" id="clients-grid">
        <!-- Client Card 1 -->
        <div class="card p-8 group">
          <div class="flex items-start justify-between mb-8">
            <div class="flex items-center space-x-4">
              <div class="w-12 h-12 bg-white/10 rounded-full flex items-center justify-center">
                <span class="text-white font-medium text-sm tracking-tight">JS</span>
              </div>
              <div>
                <h3 class="text-lg font-semibold text-white tracking-tight">John Smith</h3>
                <p class="text-gray-400 text-sm font-light">Wedding Photography</p>
              </div>
            </div>
            <span class="status-active">Active</span>
          </div>

          <div class="space-y-4 mb-8">
            <div class="flex justify-between items-center">
              <span class="text-gray-400 text-sm font-light">Active Projects</span>
              <span class="text-white font-medium tracking-tight">3</span>
            </div>
            <div class="flex justify-between items-center">
              <span class="text-gray-400 text-sm font-light">Total Revenue</span>
              <span class="text-white font-medium tracking-tight">$25,600</span>
            </div>
            <div class="flex justify-between items-center">
              <span class="text-gray-400 text-sm font-light">Last Contact</span>
              <span class="text-gray-300 font-light text-sm">2 days ago</span>
            </div>
            <div class="flex justify-between items-center">
              <span class="text-gray-400 text-sm font-light">Contact</span>
              <span class="text-gray-300 font-light text-sm">john@example.com</span>
            </div>
          </div>

          <div class="flex space-x-3">
            <button class="btn-secondary flex-1 py-3 text-sm">Contact</button>
            <button class="btn-primary flex-1 py-3 text-sm">View Details</button>
          </div>
        </div>

        <!-- Client Card 2 -->
        <div class="card p-8 group">
          <div class="flex items-start justify-between mb-8">
            <div class="flex items-center space-x-4">
              <div class="w-12 h-12 bg-white/10 rounded-full flex items-center justify-center">
                <span class="text-white font-medium text-sm tracking-tight">SJ</span>
              </div>
              <div>
                <h3 class="text-lg font-semibold text-white tracking-tight">Sarah Johnson</h3>
                <p class="text-gray-400 text-sm font-light">Corporate Events</p>
              </div>
            </div>
            <span class="status-active">VIP</span>
          </div>

          <div class="space-y-4 mb-8">
            <div class="flex justify-between items-center">
              <span class="text-gray-400 text-sm font-light">Completed Projects</span>
              <span class="text-white font-medium tracking-tight">5</span>
            </div>
            <div class="flex justify-between items-center">
              <span class="text-gray-400 text-sm font-light">Total Revenue</span>
              <span class="text-white font-medium tracking-tight">$42,300</span>
            </div>
            <div class="flex justify-between items-center">
              <span class="text-gray-400 text-sm font-light">Last Contact</span>
              <span class="text-gray-300 font-light text-sm">1 week ago</span>
            </div>
            <div class="flex justify-between items-center">
              <span class="text-gray-400 text-sm font-light">Contact</span>
              <span class="text-gray-300 font-light text-sm">sarah@company.com</span>
            </div>
          </div>

          <div class="flex space-x-3">
            <button class="btn-secondary flex-1 py-3 text-sm">Contact</button>
            <button class="btn-primary flex-1 py-3 text-sm">View Details</button>
          </div>
        </div>

        <!-- Client Card 3 -->
        <div class="card p-8 group">
          <div class="flex items-start justify-between mb-8">
            <div class="flex items-center space-x-4">
              <div class="w-12 h-12 bg-white/10 rounded-full flex items-center justify-center">
                <span class="text-white font-medium text-sm tracking-tight">MW</span>
              </div>
              <div>
                <h3 class="text-lg font-semibold text-white tracking-tight">Mike Wilson</h3>
                <p class="text-gray-400 text-sm font-light">Family Portraits</p>
              </div>
            </div>
            <span class="status-pending">Pending</span>
          </div>

          <div class="space-y-4 mb-8">
            <div class="flex justify-between items-center">
              <span class="text-gray-400 text-sm font-light">Active Projects</span>
              <span class="text-white font-medium tracking-tight">1</span>
            </div>
            <div class="flex justify-between items-center">
              <span class="text-gray-400 text-sm font-light">Total Revenue</span>
              <span class="text-white font-medium tracking-tight">$8,400</span>
            </div>
            <div class="flex justify-between items-center">
              <span class="text-gray-400 text-sm font-light">Last Contact</span>
              <span class="text-gray-300 font-light text-sm">3 days ago</span>
            </div>
            <div class="flex justify-between items-center">
              <span class="text-gray-400 text-sm font-light">Contact</span>
              <span class="text-gray-300 font-light text-sm">mike@email.com</span>
            </div>
          </div>

          <div class="flex space-x-3">
            <button class="btn-secondary flex-1 py-3 text-sm">Contact</button>
            <button class="btn-primary flex-1 py-3 text-sm">View Details</button>
          </div>
        </div>

        <!-- Client Card 4 -->
        <div class="card p-8 group">
          <div class="flex items-start justify-between mb-8">
            <div class="flex items-center space-x-4">
              <div class="w-12 h-12 bg-white/10 rounded-full flex items-center justify-center">
                <span class="text-white font-medium text-sm tracking-tight">EM</span>
              </div>
              <div>
                <h3 class="text-lg font-semibold text-white tracking-tight">Emma Martinez</h3>
                <p class="text-gray-400 text-sm font-light">Product Photography</p>
              </div>
            </div>
            <span class="status-active">Active</span>
          </div>

          <div class="space-y-4 mb-8">
            <div class="flex justify-between items-center">
              <span class="text-gray-400 text-sm font-light">Active Projects</span>
              <span class="text-white font-medium tracking-tight">2</span>
            </div>
            <div class="flex justify-between items-center">
              <span class="text-gray-400 text-sm font-light">Total Revenue</span>
              <span class="text-white font-medium tracking-tight">$18,200</span>
            </div>
            <div class="flex justify-between items-center">
              <span class="text-gray-400 text-sm font-light">Last Contact</span>
              <span class="text-gray-300 font-light text-sm">Yesterday</span>
            </div>
            <div class="flex justify-between items-center">
              <span class="text-gray-400 text-sm font-light">Contact</span>
              <span class="text-gray-300 font-light text-sm">emma@studio.com</span>
            </div>
          </div>

          <div class="flex space-x-3">
            <button class="btn-secondary flex-1 py-3 text-sm">Contact</button>
            <button class="btn-primary flex-1 py-3 text-sm">View Details</button>
          </div>
        </div>

        <!-- Client Card 5 -->
        <div class="card p-8 group">
          <div class="flex items-start justify-between mb-8">
            <div class="flex items-center space-x-4">
              <div class="w-12 h-12 bg-white/10 rounded-full flex items-center justify-center">
                <span class="text-white font-medium text-sm tracking-tight">RB</span>
              </div>
              <div>
                <h3 class="text-lg font-semibold text-white tracking-tight">Robert Brown</h3>
                <p class="text-gray-400 text-sm font-light">Architecture Photography</p>
              </div>
            </div>
            <span class="status-inactive">Inactive</span>
          </div>

          <div class="space-y-4 mb-8">
            <div class="flex justify-between items-center">
              <span class="text-gray-400 text-sm font-light">Completed Projects</span>
              <span class="text-white font-medium tracking-tight">4</span>
            </div>
            <div class="flex justify-between items-center">
              <span class="text-gray-400 text-sm font-light">Total Revenue</span>
              <span class="text-white font-medium tracking-tight">$31,800</span>
            </div>
            <div class="flex justify-between items-center">
              <span class="text-gray-400 text-sm font-light">Last Contact</span>
              <span class="text-gray-300 font-light text-sm">2 months ago</span>
            </div>
            <div class="flex justify-between items-center">
              <span class="text-gray-400 text-sm font-light">Contact</span>
              <span class="text-gray-300 font-light text-sm">robert@arch.com</span>
            </div>
          </div>

          <div class="flex space-x-3">
            <button class="btn-secondary flex-1 py-3 text-sm">Contact</button>
            <button class="btn-primary flex-1 py-3 text-sm">View Details</button>
          </div>
        </div>

        <!-- Client Card 6 -->
        <div class="card p-8 group">
          <div class="flex items-start justify-between mb-8">
            <div class="flex items-center space-x-4">
              <div class="w-12 h-12 bg-white/10 rounded-full flex items-center justify-center">
                <span class="text-white font-medium text-sm tracking-tight">LD</span>
              </div>
              <div>
                <h3 class="text-lg font-semibold text-white tracking-tight">Lisa Davis</h3>
                <p class="text-gray-400 text-sm font-light">Fashion Photography</p>
              </div>
            </div>
            <span class="status-active">VIP</span>
          </div>

          <div class="space-y-4 mb-8">
            <div class="flex justify-between items-center">
              <span class="text-gray-400 text-sm font-light">Active Projects</span>
              <span class="text-white font-medium tracking-tight">4</span>
            </div>
            <div class="flex justify-between items-center">
              <span class="text-gray-400 text-sm font-light">Total Revenue</span>
              <span class="text-white font-medium tracking-tight">$56,700</span>
            </div>
            <div class="flex justify-between items-center">
              <span class="text-gray-400 text-sm font-light">Last Contact</span>
              <span class="text-gray-300 font-light text-sm">Today</span>
            </div>
            <div class="flex justify-between items-center">
              <span class="text-gray-400 text-sm font-light">Contact</span>
              <span class="text-gray-300 font-light text-sm">lisa@fashion.com</span>
            </div>
          </div>

          <div class="flex space-x-3">
            <button class="btn-secondary flex-1 py-3 text-sm">Contact</button>
            <button class="btn-primary flex-1 py-3 text-sm">View Details</button>
          </div>
        </div>
      </div>

      <!-- Load More Button -->
      <div class="text-center mt-12" id="load-more-section">
        <button class="btn-secondary px-8 py-4" onclick="loadMoreClients()">
          Load More Clients
        </button>
      </div>
    </main>
  </div>

  <!-- Client Detail Modal Container -->
  <div id="client-detail-modal"></div>
  
  <!-- Client Edit Modal Container -->
  <div id="client-edit-modal"></div>

  <script>
    // Mock client data
    const mockClients = [
      {
        id: '1',
        name: 'Sarah Johnson',
        email: 'sarah@wedding.com',
        phone: '+1 (555) 123-4567',
        company: 'Elegant Weddings',
        industry: 'Wedding Photography',
        client_status: 'active',
        priority_level: 4,
        lifetime_value: 24500,
        avatar_url: null,
        project_summary: {
          total_projects: 3,
          active_projects: 3,
          completed_projects: 0,
          total_value: 24500
        },
        tags: ['wedding', 'luxury'],
        notes: 'High-end wedding photographer with excellent referrals.'
      },
      {
        id: '2',
        name: 'Michael Rodriguez',
        email: 'michael@corp.com',
        phone: '+1 (555) 987-6543',
        company: 'Rodriguez Corp',
        industry: 'Corporate Events',
        client_status: 'vip',
        priority_level: 5,
        lifetime_value: 89200,
        avatar_url: null,
        project_summary: {
          total_projects: 8,
          active_projects: 1,
          completed_projects: 7,
          total_value: 89200
        },
        tags: ['corporate', 'vip', 'recurring'],
        notes: 'Long-term corporate client with monthly events.'
      },
      {
        id: '3',
        name: 'Jessica Williams',
        email: 'jessica@realty.com',
        phone: '+1 (555) 456-7890',
        company: 'Premium Realty',
        industry: 'Real Estate Photography',
        client_status: 'prospect',
        priority_level: 3,
        lifetime_value: 0,
        avatar_url: null,
        project_summary: {
          total_projects: 0,
          active_projects: 0,
          completed_projects: 0,
          total_value: 0
        },
        tags: ['real-estate', 'prospect'],
        notes: 'Potential client for real estate photography services.'
      },
      {
        id: '4',
        name: 'Emma Martinez',
        email: 'emma@studio.com',
        phone: '+1 (555) 234-5678',
        company: 'Creative Studio',
        industry: 'Product Photography',
        client_status: 'active',
        priority_level: 3,
        lifetime_value: 18200,
        avatar_url: null,
        project_summary: {
          total_projects: 4,
          active_projects: 2,
          completed_projects: 2,
          total_value: 18200
        },
        tags: ['product', 'e-commerce'],
        notes: 'Specializes in e-commerce product photography.'
      },
      {
        id: '5',
        name: 'Robert Brown',
        email: 'robert@arch.com',
        phone: '+1 (555) 345-6789',
        company: 'Modern Architecture',
        industry: 'Architecture Photography',
        client_status: 'inactive',
        priority_level: 2,
        lifetime_value: 31800,
        avatar_url: null,
        project_summary: {
          total_projects: 4,
          active_projects: 0,
          completed_projects: 4,
          total_value: 31800
        },
        tags: ['architecture', 'inactive'],
        notes: 'Previous client, last contact 2 months ago.'
      },
      {
        id: '6',
        name: 'Lisa Davis',
        email: 'lisa@fashion.com',
        phone: '+1 (555) 567-8901',
        company: 'Fashion Forward',
        industry: 'Fashion Photography',
        client_status: 'vip',
        priority_level: 5,
        lifetime_value: 56700,
        avatar_url: null,
        project_summary: {
          total_projects: 6,
          active_projects: 4,
          completed_projects: 2,
          total_value: 56700
        },
        tags: ['fashion', 'vip', 'influencer'],
        notes: 'Top fashion client with regular shoots and high engagement.'
      }
    ];

    let filteredClients = [...mockClients];
    let currentFilters = {
      search: '',
      status: '',
      priority: '',
      industry: '',
      location: '',
      referral: '',
      tags: '',
      sort: 'updated_at'
    };

    // Initialize page
    document.addEventListener('DOMContentLoaded', function() {
      renderClients();
      setupEventListeners();
      updateMetrics();
    });

    function setupEventListeners() {
      // Search and filter event listeners
      const searchInput = document.getElementById('search-input');
      const statusFilter = document.getElementById('status-filter');
      const priorityFilter = document.getElementById('priority-filter');
      const sortFilter = document.getElementById('sort-filter');
      const industryFilter = document.getElementById('industry-filter');
      const locationFilter = document.getElementById('location-filter');
      const referralFilter = document.getElementById('referral-filter');
      const tagsFilter = document.getElementById('tags-filter');

      searchInput?.addEventListener('input', handleFilterChange);
      statusFilter?.addEventListener('change', handleFilterChange);
      priorityFilter?.addEventListener('change', handleFilterChange);
      sortFilter?.addEventListener('change', handleFilterChange);
      industryFilter?.addEventListener('change', handleFilterChange);
      locationFilter?.addEventListener('change', handleFilterChange);
      referralFilter?.addEventListener('change', handleFilterChange);
      tagsFilter?.addEventListener('input', handleFilterChange);
    }

    function handleFilterChange() {
      currentFilters.search = document.getElementById('search-input')?.value || '';
      currentFilters.status = document.getElementById('status-filter')?.value || '';
      currentFilters.priority = document.getElementById('priority-filter')?.value || '';
      currentFilters.sort = document.getElementById('sort-filter')?.value || 'updated_at';
      currentFilters.industry = document.getElementById('industry-filter')?.value || '';
      currentFilters.location = document.getElementById('location-filter')?.value || '';
      currentFilters.referral = document.getElementById('referral-filter')?.value || '';
      currentFilters.tags = document.getElementById('tags-filter')?.value || '';

      filterAndSortClients();
      renderClients();
    }

    function filterAndSortClients() {
      filteredClients = mockClients.filter(client => {
        // Search filter
        if (currentFilters.search) {
          const searchTerm = currentFilters.search.toLowerCase();
          const searchFields = [
            client.name,
            client.email,
            client.company,
            client.phone
          ].join(' ').toLowerCase();
          
          if (!searchFields.includes(searchTerm)) {
            return false;
          }
        }

        // Status filter
        if (currentFilters.status && client.client_status !== currentFilters.status) {
          return false;
        }

        // Priority filter
        if (currentFilters.priority && client.priority_level.toString() !== currentFilters.priority) {
          return false;
        }

        // Industry filter
        if (currentFilters.industry && client.industry?.toLowerCase() !== currentFilters.industry) {
          return false;
        }

        // Tags filter
        if (currentFilters.tags) {
          const tagSearch = currentFilters.tags.toLowerCase();
          const clientTags = client.tags?.join(' ').toLowerCase() || '';
          if (!clientTags.includes(tagSearch)) {
            return false;
          }
        }

        return true;
      });

      // Sort clients
      filteredClients.sort((a, b) => {
        switch (currentFilters.sort) {
          case 'name':
            return a.name.localeCompare(b.name);
          case 'lifetime_value':
            return (b.lifetime_value || 0) - (a.lifetime_value || 0);
          case 'project_count':
            return (b.project_summary?.total_projects || 0) - (a.project_summary?.total_projects || 0);
          case 'created_at':
            return new Date(b.created_at || '2024-01-01').getTime() - new Date(a.created_at || '2024-01-01').getTime();
          default: // updated_at
            return new Date(b.updated_at || '2024-01-15').getTime() - new Date(a.updated_at || '2024-01-15').getTime();
        }
      });
    }

    function renderClients() {
      const clientsGrid = document.getElementById('clients-grid');
      const resultsCountElement = document.getElementById('results-count');
      
      if (!clientsGrid) return;

      if (resultsCountElement) {
        resultsCountElement.textContent = filteredClients.length.toString();
      }

      clientsGrid.innerHTML = filteredClients.map(client => 
        createClientCardHTML(client)
      ).join('');
    }

    function createClientCardHTML(client) {
      const getInitials = (name) => {
        return name.split(' ').map(word => word.charAt(0)).join('').toUpperCase().slice(0, 2);
      };

      const getStatusClass = (status) => {
        switch (status) {
          case 'active': return 'status-active';
          case 'vip': return 'status-vip';
          case 'prospect': return 'status-prospect';
          case 'inactive': return 'status-inactive';
          case 'archived': return 'status-archived';
          default: return 'status-active';
        }
      };

      const formatCurrency = (amount) => {
        return new Intl.NumberFormat('en-US', {
          style: 'currency',
          currency: 'USD',
          minimumFractionDigits: 0,
        }).format(amount);
      };

      return `
        <div class="card p-8 group">
          <div class="flex items-start justify-between mb-8">
            <div class="flex items-center space-x-4">
              ${client.avatar_url ? 
                `<img src="${client.avatar_url}" alt="${client.name}" class="w-12 h-12 rounded-full object-cover" />` :
                `<div class="w-12 h-12 bg-white/10 rounded-full flex items-center justify-center">
                  <span class="text-white font-medium text-sm tracking-tight">${getInitials(client.name)}</span>
                </div>`
              }
              <div>
                <h3 class="text-lg font-semibold text-white tracking-tight">${client.name}</h3>
                <p class="text-gray-400 text-sm font-light">${client.industry || client.company || 'General Photography'}</p>
              </div>
            </div>
            <span class="${getStatusClass(client.client_status)}">${client.client_status.charAt(0).toUpperCase() + client.client_status.slice(1)}</span>
          </div>

          <div class="space-y-4 mb-8">
            <div class="flex justify-between items-center">
              <span class="text-gray-400 text-sm font-light">
                ${client.client_status === 'prospect' ? 'Estimated Projects' : 
                  client.project_summary?.active_projects > 0 ? 'Active Projects' : 'Completed Projects'}
              </span>
              <span class="text-white font-medium tracking-tight">
                ${client.client_status === 'prospect' ? '0' : 
                  client.project_summary?.active_projects > 0 ? 
                    client.project_summary.active_projects : 
                    client.project_summary?.completed_projects || 0}
              </span>
            </div>
            <div class="flex justify-between items-center">
              <span class="text-gray-400 text-sm font-light">
                ${client.client_status === 'prospect' ? 'Potential Value' : 'Total Revenue'}
              </span>
              <span class="text-white font-medium tracking-tight">${formatCurrency(client.lifetime_value || 0)}</span>
            </div>
            <div class="flex justify-between items-center">
              <span class="text-gray-400 text-sm font-light">Priority</span>
              <div class="flex space-x-1">
                ${Array.from({length: 5}, (_, i) => `
                  <svg class="w-3 h-3 ${i < client.priority_level ? 'text-yellow-400' : 'text-gray-600'}" fill="currentColor" viewBox="0 0 20 20">
                    <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                  </svg>
                `).join('')}
              </div>
            </div>
            <div class="flex justify-between items-center">
              <span class="text-gray-400 text-sm font-light">Contact</span>
              <span class="text-gray-300 font-light text-sm">${client.email}</span>
            </div>
          </div>

          <div class="flex space-x-3">
            <button onclick="contactClient('${client.id}')" class="btn-secondary flex-1 py-3 text-sm">Contact</button>
            <button onclick="openClientDetail('${client.id}')" class="btn-primary flex-1 py-3 text-sm">View Details</button>
          </div>
        </div>
      `;
    }

    function updateMetrics() {
      const totalClients = mockClients.length;
      const activeClients = mockClients.filter(c => c.client_status === 'active' || c.client_status === 'vip').length;
      const vipClients = mockClients.filter(c => c.client_status === 'vip').length;
      const totalProjects = mockClients.reduce((sum, c) => sum + (c.project_summary?.total_projects || 0), 0);
      const lifetimeValue = mockClients.reduce((sum, c) => sum + (c.lifetime_value || 0), 0);

      document.getElementById('total-clients').textContent = totalClients.toString();
      document.getElementById('active-clients').textContent = activeClients.toString();
      document.getElementById('vip-clients').textContent = vipClients.toString();
      document.getElementById('total-projects').textContent = totalProjects.toString();
      document.getElementById('lifetime-value').textContent = new Intl.NumberFormat('en-US', {
        style: 'currency',
        currency: 'USD',
        minimumFractionDigits: 0,
        notation: 'compact'
      }).format(lifetimeValue);
    }

    function openAddClientModal() {
      openClientEdit(null);
    }

    function openClientDetail(clientId) {
      const client = mockClients.find(c => c.id === clientId);
      if (!client) return;

      const modalContainer = document.getElementById('client-detail-modal');
      if (!modalContainer) return;

      modalContainer.innerHTML = createClientDetailModalHTML(client);
    }

    function openClientEdit(client) {
      const modalContainer = document.getElementById('client-edit-modal');
      if (!modalContainer) return;

      modalContainer.innerHTML = createClientEditModalHTML(client);
    }

    function createClientDetailModalHTML(client) {
      const getInitials = (name) => {
        return name.split(' ').map(word => word.charAt(0)).join('').toUpperCase().slice(0, 2);
      };

      const getStatusColor = (status) => {
        switch (status) {
          case 'active': return 'bg-green-500/20 text-green-400 border-green-500/30';
          case 'vip': return 'bg-purple-500/20 text-purple-400 border-purple-500/30';
          case 'prospect': return 'bg-yellow-500/20 text-yellow-400 border-yellow-500/30';
          case 'inactive': return 'bg-gray-500/20 text-gray-400 border-gray-500/30';
          case 'archived': return 'bg-red-500/20 text-red-400 border-red-500/30';
          default: return 'bg-blue-500/20 text-blue-400 border-blue-500/30';
        }
      };

      const formatCurrency = (amount) => {
        return new Intl.NumberFormat('en-US', {
          style: 'currency',
          currency: 'USD',
          minimumFractionDigits: 0,
        }).format(amount);
      };

      return `
        <div class="fixed inset-0 z-50 overflow-y-auto">
          <div class="flex items-center justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0">
            <div class="fixed inset-0 transition-opacity bg-black/70" onclick="closeClientDetail()"></div>
            
            <div class="inline-block w-full max-w-4xl px-6 py-8 my-8 text-left align-middle transition-all transform bg-gray-900 border border-white/10 shadow-xl rounded-xl sm:my-16">
              <div class="flex items-start justify-between mb-8">
                <div class="flex items-center space-x-6">
                  <div class="relative">
                    ${client.avatar_url ? 
                      `<img src="${client.avatar_url}" alt="${client.name}" class="w-16 h-16 rounded-full object-cover" />` :
                      `<div class="w-16 h-16 bg-white/10 rounded-full flex items-center justify-center">
                        <span class="text-white font-medium text-lg tracking-tight">${getInitials(client.name)}</span>
                      </div>`
                    }
                    <div class="absolute -bottom-1 -right-1">
                      <span class="px-2 py-1 rounded-full text-xs font-medium border ${getStatusColor(client.client_status)}">
                        ${client.client_status.charAt(0).toUpperCase() + client.client_status.slice(1)}
                      </span>
                    </div>
                  </div>
                  
                  <div>
                    <h2 class="text-2xl font-bold text-white mb-2">${client.name}</h2>
                    <div class="flex items-center space-x-4 text-sm text-gray-400">
                      ${client.company ? `<span>${client.company}</span>` : ''}
                      ${client.industry && client.company ? '<span>•</span>' : ''}
                      ${client.industry ? `<span>${client.industry}</span>` : ''}
                    </div>
                    <div class="flex items-center space-x-6 mt-3">
                      <div class="flex items-center space-x-2">
                        <span class="text-xs text-gray-400">Priority:</span>
                        <div class="flex space-x-1">
                          ${Array.from({length: 5}, (_, i) => `
                            <svg class="w-4 h-4 ${i < client.priority_level ? 'text-yellow-400' : 'text-gray-600'}" fill="currentColor" viewBox="0 0 20 20">
                              <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                            </svg>
                          `).join('')}
                        </div>
                      </div>
                      <div class="flex items-center space-x-2">
                        <span class="text-xs text-gray-400">LTV:</span>
                        <span class="text-sm font-medium text-green-400">${formatCurrency(client.lifetime_value || 0)}</span>
                      </div>
                    </div>
                  </div>
                </div>
                
                <button onclick="closeClientDetail()" class="p-2 text-gray-400 hover:text-white transition-colors rounded-lg hover:bg-white/5">
                  <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                  </svg>
                </button>
              </div>

              <div class="flex space-x-4 mb-8">
                <button onclick="openClientEdit('${client.id}')" class="btn-primary flex items-center space-x-2">
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                  </svg>
                  <span>Edit Client</span>
                </button>
                
                <button onclick="contactClient('${client.id}')" class="btn-secondary flex items-center space-x-2">
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
                  </svg>
                  <span>Contact</span>
                </button>
                
                <button onclick="createProject('${client.id}')" class="btn-outline flex items-center space-x-2">
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
                  </svg>
                  <span>New Project</span>
                </button>
              </div>

              <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                <div class="space-y-6">
                  <h3 class="text-lg font-semibold text-white mb-4">Contact Information</h3>
                  
                  <div class="space-y-4">
                    ${client.email ? `
                      <div class="flex items-center space-x-3">
                        <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                        </svg>
                        <div>
                          <p class="text-gray-400 text-sm">Email</p>
                          <p class="text-white">${client.email}</p>
                        </div>
                      </div>
                    ` : ''}
                    
                    ${client.phone ? `
                      <div class="flex items-center space-x-3">
                        <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
                        </svg>
                        <div>
                          <p class="text-gray-400 text-sm">Phone</p>
                          <p class="text-white">${client.phone}</p>
                        </div>
                      </div>
                    ` : ''}
                  </div>

                  ${client.tags && client.tags.length > 0 ? `
                    <div>
                      <h4 class="text-md font-medium text-white mb-3">Tags</h4>
                      <div class="flex flex-wrap gap-2">
                        ${client.tags.map(tag => `
                          <span class="px-2 py-1 bg-white/5 text-gray-300 text-xs rounded-md">${tag}</span>
                        `).join('')}
                      </div>
                    </div>
                  ` : ''}
                </div>

                <div class="space-y-6">
                  <h3 class="text-lg font-semibold text-white mb-4">Business Information</h3>
                  
                  <div class="grid grid-cols-2 gap-6">
                    <div class="card p-4">
                      <h4 class="text-sm text-gray-400 mb-2">Total Projects</h4>
                      <p class="text-2xl font-bold text-white">${client.project_summary?.total_projects || 0}</p>
                    </div>
                    <div class="card p-4">
                      <h4 class="text-sm text-gray-400 mb-2">Active Projects</h4>
                      <p class="text-2xl font-bold text-green-400">${client.project_summary?.active_projects || 0}</p>
                    </div>
                    <div class="card p-4">
                      <h4 class="text-sm text-gray-400 mb-2">Total Value</h4>
                      <p class="text-2xl font-bold text-white">${formatCurrency(client.project_summary?.total_value || 0)}</p>
                    </div>
                    <div class="card p-4">
                      <h4 class="text-sm text-gray-400 mb-2">Lifetime Value</h4>
                      <p class="text-2xl font-bold text-green-400">${formatCurrency(client.lifetime_value || 0)}</p>
                    </div>
                  </div>

                  ${client.notes ? `
                    <div>
                      <h4 class="text-md font-medium text-white mb-2">Notes</h4>
                      <p class="text-gray-300 leading-relaxed">${client.notes}</p>
                    </div>
                  ` : ''}
                </div>
              </div>
            </div>
          </div>
        </div>
      `;
    }

    function createClientEditModalHTML(clientData) {
      const client = clientData ? mockClients.find(c => c.id === clientData) || clientData : null;
      
      return `
        <div class="fixed inset-0 z-50 overflow-y-auto">
          <div class="flex items-center justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0">
            <div class="fixed inset-0 transition-opacity bg-black/70" onclick="closeClientEdit()"></div>
            
            <div class="inline-block w-full max-w-2xl px-6 py-8 my-8 text-left align-middle transition-all transform bg-gray-900 border border-white/10 shadow-xl rounded-xl sm:my-16">
              <div class="flex items-center justify-between mb-8">
                <h2 class="text-2xl font-bold text-white">
                  ${client ? 'Edit Client' : 'Add New Client'}
                </h2>
                <button onclick="closeClientEdit()" class="p-2 text-gray-400 hover:text-white transition-colors rounded-lg hover:bg-white/5">
                  <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                  </svg>
                </button>
              </div>

              <form onsubmit="saveClient(event)" class="space-y-6">
                <input type="hidden" id="client-id" value="${client?.id || ''}" />
                
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div>
                    <label class="block text-sm font-medium text-gray-300 mb-2">Full Name *</label>
                    <input type="text" id="client-name" class="input-field w-full" placeholder="Enter full name" value="${client?.name || ''}" required />
                  </div>

                  <div>
                    <label class="block text-sm font-medium text-gray-300 mb-2">Email</label>
                    <input type="email" id="client-email" class="input-field w-full" placeholder="Enter email address" value="${client?.email || ''}" />
                  </div>

                  <div>
                    <label class="block text-sm font-medium text-gray-300 mb-2">Phone</label>
                    <input type="tel" id="client-phone" class="input-field w-full" placeholder="Enter phone number" value="${client?.phone || ''}" />
                  </div>

                  <div>
                    <label class="block text-sm font-medium text-gray-300 mb-2">Company</label>
                    <input type="text" id="client-company" class="input-field w-full" placeholder="Enter company name" value="${client?.company || ''}" />
                  </div>

                  <div>
                    <label class="block text-sm font-medium text-gray-300 mb-2">Status</label>
                    <select id="client-status" class="input-field w-full">
                      <option value="prospect" ${client?.client_status === 'prospect' ? 'selected' : ''}>Prospect</option>
                      <option value="active" ${client?.client_status === 'active' ? 'selected' : ''}>Active</option>
                      <option value="vip" ${client?.client_status === 'vip' ? 'selected' : ''}>VIP</option>
                      <option value="inactive" ${client?.client_status === 'inactive' ? 'selected' : ''}>Inactive</option>
                      <option value="archived" ${client?.client_status === 'archived' ? 'selected' : ''}>Archived</option>
                    </select>
                  </div>

                  <div>
                    <label class="block text-sm font-medium text-gray-300 mb-2">Priority Level</label>
                    <select id="client-priority" class="input-field w-full">
                      <option value="1" ${client?.priority_level === 1 ? 'selected' : ''}>1 - Low</option>
                      <option value="2" ${client?.priority_level === 2 ? 'selected' : ''}>2 - Below Average</option>
                      <option value="3" ${client?.priority_level === 3 ? 'selected' : ''}>3 - Average</option>
                      <option value="4" ${client?.priority_level === 4 ? 'selected' : ''}>4 - High</option>
                      <option value="5" ${client?.priority_level === 5 ? 'selected' : ''}>5 - Critical</option>
                    </select>
                  </div>

                  <div class="md:col-span-2">
                    <label class="block text-sm font-medium text-gray-300 mb-2">Notes</label>
                    <textarea id="client-notes" class="input-field w-full h-32 resize-none" placeholder="Any additional notes about this client...">${client?.notes || ''}</textarea>
                  </div>
                </div>

                <div class="flex items-center justify-end space-x-4 pt-6 border-t border-white/10">
                  <button type="button" onclick="closeClientEdit()" class="btn-outline">Cancel</button>
                  <button type="submit" class="btn-primary">Save Client</button>
                </div>
              </form>
            </div>
          </div>
        </div>
      `;
    }

    function closeClientDetail() {
      const modalContainer = document.getElementById('client-detail-modal');
      if (modalContainer) {
        modalContainer.innerHTML = '';
      }
    }

    function closeClientEdit() {
      const modalContainer = document.getElementById('client-edit-modal');
      if (modalContainer) {
        modalContainer.innerHTML = '';
      }
    }

    function saveClient(event) {
      event.preventDefault();
      
      const clientId = document.getElementById('client-id').value;
      const formData = {
        name: document.getElementById('client-name').value,
        email: document.getElementById('client-email').value,
        phone: document.getElementById('client-phone').value,
        company: document.getElementById('client-company').value,
        client_status: document.getElementById('client-status').value,
        priority_level: parseInt(document.getElementById('client-priority').value),
        notes: document.getElementById('client-notes').value
      };

      if (clientId) {
        // Update existing client
        const clientIndex = mockClients.findIndex(c => c.id === clientId);
        if (clientIndex !== -1) {
          mockClients[clientIndex] = { ...mockClients[clientIndex], ...formData };
        }
      } else {
        // Add new client
        const newClient = {
          id: Date.now().toString(),
          ...formData,
          lifetime_value: 0,
          project_summary: {
            total_projects: 0,
            active_projects: 0,
            completed_projects: 0,
            total_value: 0
          },
          tags: [],
          created_at: new Date().toISOString(),
          updated_at: new Date().toISOString()
        };
        mockClients.push(newClient);
      }

      // Refresh the display
      filterAndSortClients();
      renderClients();
      updateMetrics();
      closeClientEdit();
    }

    function contactClient(clientId) {
      const client = mockClients.find(c => c.id === clientId);
      if (client && client.email) {
        window.location.href = `mailto:${client.email}`;
      }
    }

    function createProject(clientId) {
      // Navigate to projects page with client pre-selected
      window.location.href = `/projects?client=${clientId}`;
    }

    function loadMoreClients() {
      // In a real implementation, this would load more data from the server
      console.log('Loading more clients...');
    }

    function toggleAdvancedFilters() {
      const advancedFilters = document.getElementById('advanced-filters');
      const toggleIcon = document.getElementById('advanced-filters-icon');
      
      if (advancedFilters?.classList.contains('hidden')) {
        advancedFilters.classList.remove('hidden');
        toggleIcon?.classList.add('rotate-180');
      } else {
        advancedFilters?.classList.add('hidden');
        toggleIcon?.classList.remove('rotate-180');
      }
    }

    function clearFilters() {
      document.getElementById('search-input').value = '';
      document.getElementById('status-filter').value = '';
      document.getElementById('priority-filter').value = '';
      document.getElementById('sort-filter').value = 'updated_at';
      document.getElementById('industry-filter').value = '';
      document.getElementById('location-filter').value = '';
      document.getElementById('referral-filter').value = '';
      document.getElementById('tags-filter').value = '';
      
      handleFilterChange();
    }

    function exportClients() {
      // In a real implementation, this would export client data
      console.log('Exporting clients...');
    }

    function toggleViewMode() {
      // Toggle between grid and list view
      console.log('Toggling view mode...');
    }
  </script>
</Layout> 