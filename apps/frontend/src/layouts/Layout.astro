---
import '../styles/global.css';

export interface Props {
  title: string;
}

const { title } = Astro.props;
const isDev = import.meta.env.DEV;
---

<!DOCTYPE html>
<html lang="en" dir="ltr">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="MediaHand - AI-powered business management platform for photographers and videographers" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&family=Playfair+Display:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <slot />
    {isDev && (
      <div id="stagewise-dev-toolbar">
        <!-- Stagewise toolbar will be initialized here in development mode -->
      </div>
    )}

    {isDev && (
      <script>
        // Initialize stagewise toolbar in development mode
        if (typeof window !== 'undefined') {
          const stagewiseConfig = {
            plugins: [] as any[]
          };

          // Load Stagewise toolbar and React plugin dynamically
          /* eslint-disable @typescript-eslint/ban-ts-comment */
          // @ts-ignore - stagewise packages may not have types
          Promise.all([
            import('@stagewise/toolbar-react'),
            // @ts-ignore
            import('@stagewise-plugins/react'),
            import('react'),
            import('react-dom/client')
          ]).then(([toolbarModule, pluginModule, React, { createRoot }]) => {
            const { StagewiseToolbar } = toolbarModule;
            const { ReactPlugin } = pluginModule;

            // Attach ReactPlugin to Stagewise configuration
            stagewiseConfig.plugins = [ReactPlugin];

            const toolbarContainer = document.getElementById('stagewise-dev-toolbar');
            if (toolbarContainer) {
              const root = createRoot(toolbarContainer);
              root.render(React.createElement(StagewiseToolbar, { config: stagewiseConfig }));
            }
          }).catch((error) => {
            console.warn('Failed to load stagewise toolbar:', error);
          });
        }
      </script>
    )}
  </body>
</html> 